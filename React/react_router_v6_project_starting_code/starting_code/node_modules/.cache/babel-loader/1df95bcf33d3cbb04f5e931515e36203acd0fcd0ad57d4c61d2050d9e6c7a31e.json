{"ast":null,"code":"import { rest } from 'msw';\nimport types from './data/types.json';\nimport animals from './data/animals.json';\nimport details from './data/details.json';\nexport const handlers = [rest.get('/types', (_req, res, ctx) => {\n  return res(ctx.status(200), ctx.json(types));\n}), rest.get('/animals', (req, res, ctx) => {\n  const type = req.url.searchParams.get('type');\n  const query = req.url.searchParams.get('query');\n  let response = animals.animals;\n  if (type !== '') {\n    response = response.filter(animal => animal.type.toLowerCase() === type.toLowerCase());\n  }\n  if (query !== '') {\n    response = response.filter(animal => animal.contact.address.state.toLowerCase().includes(query.toLowerCase()) || animal.name.toLowerCase().includes(query.toLowerCase()));\n  }\n  return res(ctx.status(200), ctx.json(response));\n}), rest.get('/animals/:id', (req, res, ctx) => {\n  const {\n    id\n  } = req.params;\n  let response = details[id];\n  if (!response) {\n    return res(ctx.status(404));\n  }\n  return res(ctx.status(200), ctx.json(response));\n})];","map":{"version":3,"names":["rest","types","animals","details","handlers","get","_req","res","ctx","status","json","req","type","url","searchParams","query","response","filter","animal","toLowerCase","contact","address","state","includes","name","id","params"],"sources":["C:/Users/daleh/js_projects/js_projects/React/react_router_v6_project_starting_code/starting_code/src/mocks/handlers.js"],"sourcesContent":["import { rest } from 'msw';\r\nimport types from './data/types.json';\r\nimport animals from './data/animals.json';\r\nimport details from './data/details.json';\r\n\r\nexport const handlers = [\r\n  rest.get('/types', (_req, res, ctx) => {\r\n    return res(ctx.status(200), ctx.json(types));\r\n  }),\r\n  rest.get('/animals', (req, res, ctx) => {\r\n    const type = req.url.searchParams.get('type');\r\n    const query = req.url.searchParams.get('query');\r\n    let response = animals.animals;\r\n\r\n    if (type !== '') {\r\n      response = response.filter(\r\n        (animal) => animal.type.toLowerCase() === type.toLowerCase()\r\n      );\r\n    }\r\n    if (query !== '') {\r\n      response = response.filter(\r\n        (animal) =>\r\n          animal.contact.address.state\r\n            .toLowerCase()\r\n            .includes(query.toLowerCase()) ||\r\n          animal.name.toLowerCase().includes(query.toLowerCase())\r\n      );\r\n    }\r\n    return res(ctx.status(200), ctx.json(response));\r\n  }),\r\n  rest.get('/animals/:id', (req, res, ctx) => {\r\n    const { id } = req.params;\r\n    let response = details[id];\r\n\r\n    if (!response) {\r\n      return res(ctx.status(404));\r\n    }\r\n\r\n    return res(ctx.status(200), ctx.json(response));\r\n  })\r\n];\r\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,KAAK;AAC1B,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,OAAO,MAAM,qBAAqB;AAEzC,OAAO,MAAMC,QAAQ,GAAG,CACtBJ,IAAI,CAACK,GAAG,CAAC,QAAQ,EAAE,CAACC,IAAI,EAAEC,GAAG,EAAEC,GAAG,KAAK;EACrC,OAAOD,GAAG,CAACC,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,EAAED,GAAG,CAACE,IAAI,CAACT,KAAK,CAAC,CAAC;AAC9C,CAAC,CAAC,EACFD,IAAI,CAACK,GAAG,CAAC,UAAU,EAAE,CAACM,GAAG,EAAEJ,GAAG,EAAEC,GAAG,KAAK;EACtC,MAAMI,IAAI,GAAGD,GAAG,CAACE,GAAG,CAACC,YAAY,CAACT,GAAG,CAAC,MAAM,CAAC;EAC7C,MAAMU,KAAK,GAAGJ,GAAG,CAACE,GAAG,CAACC,YAAY,CAACT,GAAG,CAAC,OAAO,CAAC;EAC/C,IAAIW,QAAQ,GAAGd,OAAO,CAACA,OAAO;EAE9B,IAAIU,IAAI,KAAK,EAAE,EAAE;IACfI,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CACvBC,MAAM,IAAKA,MAAM,CAACN,IAAI,CAACO,WAAW,EAAE,KAAKP,IAAI,CAACO,WAAW,EAAE,CAC7D;EACH;EACA,IAAIJ,KAAK,KAAK,EAAE,EAAE;IAChBC,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CACvBC,MAAM,IACLA,MAAM,CAACE,OAAO,CAACC,OAAO,CAACC,KAAK,CACzBH,WAAW,EAAE,CACbI,QAAQ,CAACR,KAAK,CAACI,WAAW,EAAE,CAAC,IAChCD,MAAM,CAACM,IAAI,CAACL,WAAW,EAAE,CAACI,QAAQ,CAACR,KAAK,CAACI,WAAW,EAAE,CAAC,CAC1D;EACH;EACA,OAAOZ,GAAG,CAACC,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,EAAED,GAAG,CAACE,IAAI,CAACM,QAAQ,CAAC,CAAC;AACjD,CAAC,CAAC,EACFhB,IAAI,CAACK,GAAG,CAAC,cAAc,EAAE,CAACM,GAAG,EAAEJ,GAAG,EAAEC,GAAG,KAAK;EAC1C,MAAM;IAAEiB;EAAG,CAAC,GAAGd,GAAG,CAACe,MAAM;EACzB,IAAIV,QAAQ,GAAGb,OAAO,CAACsB,EAAE,CAAC;EAE1B,IAAI,CAACT,QAAQ,EAAE;IACb,OAAOT,GAAG,CAACC,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAAC;EAC7B;EAEA,OAAOF,GAAG,CAACC,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,EAAED,GAAG,CAACE,IAAI,CAACM,QAAQ,CAAC,CAAC;AACjD,CAAC,CAAC,CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}